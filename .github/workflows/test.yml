name: "Test Flutter App"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decode files
        env:
          FIREBASE_OPTIONS_DART: ${{ secrets.FIREBASE_OPTIONS_DART }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: |
          echo $FIREBASE_OPTIONS_DART | base64 --decode > lib/firebase_options.dart
          echo $GOOGLE_SERVICES_JSON | base64 --decode > android/app/google-services.json
          echo $KEYSTORE_BASE64 | base64 --decode > upload-keystore.jks

      - name: Create key.properties
        env:
          KEY_PROPERTIES_PATH: ${{ github.workspace }}/android/key.properties
        run: |
          echo 'storePassword=${{ secrets.KEYSTORE_PASSWORD }}' > $KEY_PROPERTIES_PATH
          echo 'keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}' >> $KEY_PROPERTIES_PATH
          echo 'keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}' >> $KEY_PROPERTIES_PATH
          echo 'storeFile=${{ github.workspace }}/upload-keystore.jks' >> $KEY_PROPERTIES_PATH

      - name: Setup Java
        if: runner.os == 'Linux'
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "19"
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Set up Android SDK
        if: ${{ env.ACT }}
        uses: android-actions/setup-android@v3

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Android Release
        if: runner.os == 'Linux'
        run: flutter build apk
